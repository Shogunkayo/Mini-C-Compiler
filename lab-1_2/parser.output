Terminals unused in grammar

    ENUM
    STRUCT
    UNION
    SHORT
    LONG
    SIGNED
    UNSIGNED
    REGISTER
    GOTO
    SIZEOF
    TYPEDEF
    DO
    ELSEIF
    DEFINE
    UNDEF
    IFDEF
    IFNDEF
    PPIF
    PPELSE
    ENDIF
    RETURN
    DOT
    STRUCTPOINT
    SINQUOTE
    SFTLEFT
    SFTRIGHT
    SHORTADD
    SHORTMUL
    SHORTDIV
    SHORTSUB
    SHORTMOD
    ANDAND
    OROR


State 194 conflicts: 1 shift/reduce
State 248 conflicts: 1 shift/reduce
State 273 conflicts: 1 shift/reduce
State 283 conflicts: 1 shift/reduce


Grammar

    0 $accept: Start $end

    1 Start: Prog

    2 Prog: INCLUDE HEADER Prog
    3     | Main Prog
    4     | error
    5     | VarDeclr ';' Prog
    6     | VarInit ';' Prog
    7     | ArrayDeclr ';' Prog
    8     | ε

    9 Type: INT
   10     | CHAR
   11     | FLOAT
   12     | DOUBLE
   13     | VOID

   14 TypeSpecifier: CONST TypeSpecifier
   15              | STATIC
   16              | EXTERN
   17              | VOLATILE
   18              | AUTO
   19              | CONST

   20 TypeList: Type TypeSpecifier
   21         | TypeSpecifier Type
   22         | Type

   23 Main: TypeList MAIN '(' MainArg1 ')' '{' Body '}'

   24 MainArg1: INT ID ',' MainArg2
   25         | INT ID
   26         | ε

   27 MainArg2: CHAR '*' '*' ID ',' MainArg3
   28         | CHAR '*' ID '[' ']' ',' MainArg3
   29         | CHAR '*' ID '[' ']'
   30         | CHAR '*' '*' ID
   31         | ε

   32 MainArg3: CHAR '*' '*' ID
   33         | CHAR '*' ID '[' ']'
   34         | ε

   35 LoopStmt: BREAK ';'
   36         | VarDeclr ';'
   37         | VarInit ';'
   38         | ArrayDeclr ';'
   39         | LoopIfCond
   40         | WhileLoop
   41         | ForLoop
   42         | SwitchCond
   43         | ';'

   44 SnglStmt: VarDeclr ';'
   45         | VarInit ';'
   46         | ArrayDeclr ';'
   47         | IfCond
   48         | WhileLoop
   49         | ForLoop
   50         | SwitchCond
   51         | ';'

   52 LoopBody: BREAK ';' LoopBody
   53         | VarDeclr ';' LoopBody
   54         | VarInit ';' LoopBody
   55         | ArrayDeclr ';' LoopBody
   56         | LoopIfCond LoopBody
   57         | WhileLoop LoopBody
   58         | ForLoop LoopBody
   59         | SwitchCond LoopBody
   60         | ε

   61 Body: VarDeclr ';' Body
   62     | VarInit ';' Body
   63     | ArrayDeclr ';' Body
   64     | IfCond Body
   65     | WhileLoop Body
   66     | ForLoop Body
   67     | SwitchCond Body
   68     | ε

   69 VarDeclr: TypeList VarList

   70 VarList: ID ',' VarList
   71        | ID '=' VarInit ',' VarList
   72        | ID
   73        | ID '=' VarInit

   74 VarInit: Expr
   75        | ID '=' Expr
   76        | IncDec
   77        | IncDec Expr
   78        | ID '=' STRLITERAL

   79 IncDec: ID INC
   80       | ID DEC
   81       | INC ID
   82       | DEC ID

   83 Expr: Expr Relop E
   84     | E

   85 E: E '+' T
   86  | E '-' T
   87  | T

   88 T: T '*' F
   89  | T '/' F
   90  | F

   91 F: NUM
   92  | INTEGER
   93  | ID
   94  | CHARACTER
   95  | '(' Condition ')'
   96  | '!' ID
   97  | '!' INTEGER
   98  | '!' NUM
   99  | '!' CHARACTER
  100  | '!' '(' Condition ')'

  101 Condition: VarInit Logical Condition
  102          | VarInit

  103 Logical: '&' '&'
  104        | '|' '|'

  105 Relop: LESSER
  106      | LESSEREQ
  107      | GREATER
  108      | GREATEREQ
  109      | EQCOMP
  110      | NOTEQ

  111 ArrayDeclr: TypeList ArrayList

  112 ArrayList: ID ArrayDim ',' ArrayList
  113          | ID ArrayDim
  114          | ID ArrayDim '=' '{' ArrayInit '}' ',' ArrayList
  115          | ID ArrayDim '=' '{' ArrayInit '}'
  116          | ID ArrayDim '=' STRLITERAL

  117 ArrayDim: '[' INTEGER ']' ArrayDim
  118         | '[' INTEGER ']'
  119         | '[' ID ']' ArrayDim
  120         | '[' ID ']'
  121         | '[' ']' ArrayDim
  122         | '[' ']'

  123 ArrayInit: Expr ',' ArrayInit
  124          | Expr
  125          | ε

  126 IfCond: IF '(' Condition ')' SnglStmt ElseCond
  127       | IF '(' Condition ')' '{' Body '}' ElseCond
  128       | IF '(' Condition ')' SnglStmt
  129       | IF '(' Condition ')' '{' Body '}'

  130 LoopIfCond: IF '(' Condition ')' LoopStmt LoopElseCond
  131           | IF '(' Condition ')' '{' LoopBody '}' LoopElseCond
  132           | IF '(' Condition ')' LoopStmt
  133           | IF '(' Condition ')' '{' LoopBody '}'

  134 ElseCond: ELSE SnglStmt
  135         | ELSE '{' Body '}'

  136 LoopElseCond: ELSE LoopStmt
  137             | ELSE '{' LoopBody '}'

  138 WhileLoop: WHILE '(' Condition ')' LoopStmt
  139          | WHILE '(' Condition ')' '{' LoopBody '}'

  140 ForLoop: FOR '(' ForInit ';' ForCond ';' ForCond ')' LoopStmt
  141        | FOR '(' ForInit ';' ForCond ';' ForCond ')' '{' LoopBody '}'

  142 ForInit: VarDeclr
  143        | ForCond

  144 ForCond: Condition
  145        | ε

  146 SwitchCond: SWITCH '(' VarInit ')' '{' CaseList '}'
  147           | SWITCH '(' VarInit ')' CASE INTEGER ':' LoopStmt
  148           | SWITCH '(' VarInit ')' DEFAULT ':' LoopStmt

  149 CaseList: Case
  150         | Case CaseList

  151 Case: CASE INTEGER ':' LoopStmt
  152     | DEFAULT ':' LoopStmt


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 96 97 98 99 100
    '&' (38) 103
    '(' (40) 23 95 100 126 127 128 129 130 131 132 133 138 139 140 141 146 147 148
    ')' (41) 23 95 100 126 127 128 129 130 131 132 133 138 139 140 141 146 147 148
    '*' (42) 27 28 29 30 32 33 88
    '+' (43) 85
    ',' (44) 24 27 28 70 71 112 114 123
    '-' (45) 86
    '/' (47) 89
    ':' (58) 147 148 151 152
    ';' (59) 5 6 7 35 36 37 38 43 44 45 46 51 52 53 54 55 61 62 63 140 141
    '=' (61) 71 73 75 78 114 115 116
    '[' (91) 28 29 33 117 118 119 120 121 122
    ']' (93) 28 29 33 117 118 119 120 121 122
    '{' (123) 23 114 115 127 129 131 133 135 137 139 141 146
    '|' (124) 104
    '}' (125) 23 114 115 127 129 131 133 135 137 139 141 146
    error (256) 4
    VOID (258) 13
    INT (259) 9 24 25
    FLOAT (260) 11
    CHAR (261) 10 27 28 29 30 32 33
    DOUBLE (262) 12
    ENUM (263)
    STRUCT (264)
    UNION (265)
    SHORT (266)
    LONG (267)
    SIGNED (268)
    UNSIGNED (269)
    AUTO (270) 18
    STATIC (271) 15
    EXTERN (272) 16
    VOLATILE (273) 17
    CONST (274) 14 19
    REGISTER (275)
    GOTO (276)
    SIZEOF (277)
    TYPEDEF (278)
    WHILE (279) 138 139
    FOR (280) 140 141
    DO (281)
    BREAK (282) 35 52
    IF (283) 126 127 128 129 130 131 132 133
    ELSE (284) 134 135 136 137
    ELSEIF (285)
    SWITCH (286) 146 147 148
    DEFAULT (287) 148 152
    CASE (288) 147 151
    INCLUDE (289) 2
    DEFINE (290)
    UNDEF (291)
    IFDEF (292)
    IFNDEF (293)
    PPIF (294)
    PPELSE (295)
    ENDIF (296)
    HEADER (297) 2
    MAIN (298) 23
    RETURN (299)
    CHARACTER (300) 94 99
    ID (301) 24 25 27 28 29 30 32 33 70 71 72 73 75 78 79 80 81 82 93 96 112 113 114 115 116 119 120
    INTEGER (302) 92 97 117 118 147 151
    NUM (303) 91 98
    STRLITERAL (304) 78 116
    DOT (305)
    STRUCTPOINT (306)
    SINQUOTE (307)
    INC (308) 79 81
    DEC (309) 80 82
    SFTLEFT (310)
    SFTRIGHT (311)
    SHORTADD (312)
    SHORTMUL (313)
    SHORTDIV (314)
    SHORTSUB (315)
    SHORTMOD (316)
    LESSER (317) 105
    LESSEREQ (318) 106
    GREATER (319) 107
    GREATEREQ (320) 108
    EQCOMP (321) 109
    NOTEQ (322) 110
    ANDAND (323)
    OROR (324)


Nonterminals, with rules where they appear

    $accept (87)
        on left: 0
    Start (88)
        on left: 1
        on right: 0
    Prog (89)
        on left: 2 3 4 5 6 7 8
        on right: 1 2 3 5 6 7
    Type (90)
        on left: 9 10 11 12 13
        on right: 20 21 22
    TypeSpecifier (91)
        on left: 14 15 16 17 18 19
        on right: 14 20 21
    TypeList (92)
        on left: 20 21 22
        on right: 23 69 111
    Main (93)
        on left: 23
        on right: 3
    MainArg1 (94)
        on left: 24 25 26
        on right: 23
    MainArg2 (95)
        on left: 27 28 29 30 31
        on right: 24
    MainArg3 (96)
        on left: 32 33 34
        on right: 27 28
    LoopStmt (97)
        on left: 35 36 37 38 39 40 41 42 43
        on right: 130 132 136 138 140 147 148 151 152
    SnglStmt (98)
        on left: 44 45 46 47 48 49 50 51
        on right: 126 128 134
    LoopBody (99)
        on left: 52 53 54 55 56 57 58 59 60
        on right: 52 53 54 55 56 57 58 59 131 133 137 139 141
    Body (100)
        on left: 61 62 63 64 65 66 67 68
        on right: 23 61 62 63 64 65 66 67 127 129 135
    VarDeclr (101)
        on left: 69
        on right: 5 36 44 53 61 142
    VarList (102)
        on left: 70 71 72 73
        on right: 69 70 71
    VarInit (103)
        on left: 74 75 76 77 78
        on right: 6 37 45 54 62 71 73 101 102 146 147 148
    IncDec (104)
        on left: 79 80 81 82
        on right: 76 77
    Expr (105)
        on left: 83 84
        on right: 74 75 77 83 123 124
    E (106)
        on left: 85 86 87
        on right: 83 84 85 86
    T (107)
        on left: 88 89 90
        on right: 85 86 87 88 89
    F (108)
        on left: 91 92 93 94 95 96 97 98 99 100
        on right: 88 89 90
    Condition (109)
        on left: 101 102
        on right: 95 100 101 126 127 128 129 130 131 132 133 138 139 144
    Logical (110)
        on left: 103 104
        on right: 101
    Relop (111)
        on left: 105 106 107 108 109 110
        on right: 83
    ArrayDeclr (112)
        on left: 111
        on right: 7 38 46 55 63
    ArrayList (113)
        on left: 112 113 114 115 116
        on right: 111 112 114
    ArrayDim (114)
        on left: 117 118 119 120 121 122
        on right: 112 113 114 115 116 117 119 121
    ArrayInit (115)
        on left: 123 124 125
        on right: 114 115 123
    IfCond (116)
        on left: 126 127 128 129
        on right: 47 64
    LoopIfCond (117)
        on left: 130 131 132 133
        on right: 39 56
    ElseCond (118)
        on left: 134 135
        on right: 126 127
    LoopElseCond (119)
        on left: 136 137
        on right: 130 131
    WhileLoop (120)
        on left: 138 139
        on right: 40 48 57 65
    ForLoop (121)
        on left: 140 141
        on right: 41 49 58 66
    ForInit (122)
        on left: 142 143
        on right: 140 141
    ForCond (123)
        on left: 144 145
        on right: 140 141 143
    SwitchCond (124)
        on left: 146 147 148
        on right: 42 50 59 67
    CaseList (125)
        on left: 149 150
        on right: 146 150
    Case (126)
        on left: 151 152
        on right: 149 150


State 0

    0 $accept: • Start $end

    error      shift, and go to state 1
    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    INCLUDE    shift, and go to state 12
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $end  reduce using rule 8 (Prog)

    Start          go to state 21
    Prog           go to state 22
    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 25
    Main           go to state 26
    VarDeclr       go to state 27
    VarInit        go to state 28
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 34


State 1

    4 Prog: error •

    $default  reduce using rule 4 (Prog)


State 2

   13 Type: VOID •

    $default  reduce using rule 13 (Type)


State 3

    9 Type: INT •

    $default  reduce using rule 9 (Type)


State 4

   11 Type: FLOAT •

    $default  reduce using rule 11 (Type)


State 5

   10 Type: CHAR •

    $default  reduce using rule 10 (Type)


State 6

   12 Type: DOUBLE •

    $default  reduce using rule 12 (Type)


State 7

   18 TypeSpecifier: AUTO •

    $default  reduce using rule 18 (TypeSpecifier)


State 8

   15 TypeSpecifier: STATIC •

    $default  reduce using rule 15 (TypeSpecifier)


State 9

   16 TypeSpecifier: EXTERN •

    $default  reduce using rule 16 (TypeSpecifier)


State 10

   17 TypeSpecifier: VOLATILE •

    $default  reduce using rule 17 (TypeSpecifier)


State 11

   14 TypeSpecifier: CONST • TypeSpecifier
   19              | CONST •

    AUTO      shift, and go to state 7
    STATIC    shift, and go to state 8
    EXTERN    shift, and go to state 9
    VOLATILE  shift, and go to state 10
    CONST     shift, and go to state 11

    $default  reduce using rule 19 (TypeSpecifier)

    TypeSpecifier  go to state 35


State 12

    2 Prog: INCLUDE • HEADER Prog

    HEADER  shift, and go to state 36


State 13

   94 F: CHARACTER •

    $default  reduce using rule 94 (F)


State 14

   75 VarInit: ID • '=' Expr
   78        | ID • '=' STRLITERAL
   79 IncDec: ID • INC
   80       | ID • DEC
   93 F: ID •

    INC  shift, and go to state 37
    DEC  shift, and go to state 38
    '='  shift, and go to state 39

    $default  reduce using rule 93 (F)


State 15

   92 F: INTEGER •

    $default  reduce using rule 92 (F)


State 16

   91 F: NUM •

    $default  reduce using rule 91 (F)


State 17

   81 IncDec: INC • ID

    ID  shift, and go to state 40


State 18

   82 IncDec: DEC • ID

    ID  shift, and go to state 41


State 19

   95 F: '(' • Condition ')'

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    VarInit    go to state 42
    IncDec     go to state 29
    Expr       go to state 30
    E          go to state 31
    T          go to state 32
    F          go to state 33
    Condition  go to state 43


State 20

   96 F: '!' • ID
   97  | '!' • INTEGER
   98  | '!' • NUM
   99  | '!' • CHARACTER
  100  | '!' • '(' Condition ')'

    CHARACTER  shift, and go to state 44
    ID         shift, and go to state 45
    INTEGER    shift, and go to state 46
    NUM        shift, and go to state 47
    '('        shift, and go to state 48


State 21

    0 $accept: Start • $end

    $end  shift, and go to state 49


State 22

    1 Start: Prog •

    $default  reduce using rule 1 (Start)


State 23

   20 TypeList: Type • TypeSpecifier
   22         | Type •

    AUTO      shift, and go to state 7
    STATIC    shift, and go to state 8
    EXTERN    shift, and go to state 9
    VOLATILE  shift, and go to state 10
    CONST     shift, and go to state 11

    $default  reduce using rule 22 (TypeList)

    TypeSpecifier  go to state 50


State 24

   21 TypeList: TypeSpecifier • Type

    VOID    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    CHAR    shift, and go to state 5
    DOUBLE  shift, and go to state 6

    Type  go to state 51


State 25

   23 Main: TypeList • MAIN '(' MainArg1 ')' '{' Body '}'
   69 VarDeclr: TypeList • VarList
  111 ArrayDeclr: TypeList • ArrayList

    MAIN  shift, and go to state 52
    ID    shift, and go to state 53

    VarList    go to state 54
    ArrayList  go to state 55


State 26

    3 Prog: Main • Prog

    error      shift, and go to state 1
    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    INCLUDE    shift, and go to state 12
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $end  reduce using rule 8 (Prog)

    Prog           go to state 56
    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 25
    Main           go to state 26
    VarDeclr       go to state 27
    VarInit        go to state 28
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 34


State 27

    5 Prog: VarDeclr • ';' Prog

    ';'  shift, and go to state 57


State 28

    6 Prog: VarInit • ';' Prog

    ';'  shift, and go to state 58


State 29

   76 VarInit: IncDec •
   77        | IncDec • Expr

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 59
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 76 (VarInit)

    Expr  go to state 60
    E     go to state 31
    T     go to state 32
    F     go to state 33


State 30

   74 VarInit: Expr •
   83 Expr: Expr • Relop E

    LESSER     shift, and go to state 61
    LESSEREQ   shift, and go to state 62
    GREATER    shift, and go to state 63
    GREATEREQ  shift, and go to state 64
    EQCOMP     shift, and go to state 65
    NOTEQ      shift, and go to state 66

    $default  reduce using rule 74 (VarInit)

    Relop  go to state 67


State 31

   84 Expr: E •
   85 E: E • '+' T
   86  | E • '-' T

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 84 (Expr)


State 32

   87 E: T •
   88 T: T • '*' F
   89  | T • '/' F

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71

    $default  reduce using rule 87 (E)


State 33

   90 T: F •

    $default  reduce using rule 90 (T)


State 34

    7 Prog: ArrayDeclr • ';' Prog

    ';'  shift, and go to state 72


State 35

   14 TypeSpecifier: CONST TypeSpecifier •

    $default  reduce using rule 14 (TypeSpecifier)


State 36

    2 Prog: INCLUDE HEADER • Prog

    error      shift, and go to state 1
    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    INCLUDE    shift, and go to state 12
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $end  reduce using rule 8 (Prog)

    Prog           go to state 73
    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 25
    Main           go to state 26
    VarDeclr       go to state 27
    VarInit        go to state 28
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 34


State 37

   79 IncDec: ID INC •

    $default  reduce using rule 79 (IncDec)


State 38

   80 IncDec: ID DEC •

    $default  reduce using rule 80 (IncDec)


State 39

   75 VarInit: ID '=' • Expr
   78        | ID '=' • STRLITERAL

    CHARACTER   shift, and go to state 13
    ID          shift, and go to state 59
    INTEGER     shift, and go to state 15
    NUM         shift, and go to state 16
    STRLITERAL  shift, and go to state 74
    '('         shift, and go to state 19
    '!'         shift, and go to state 20

    Expr  go to state 75
    E     go to state 31
    T     go to state 32
    F     go to state 33


State 40

   81 IncDec: INC ID •

    $default  reduce using rule 81 (IncDec)


State 41

   82 IncDec: DEC ID •

    $default  reduce using rule 82 (IncDec)


State 42

  101 Condition: VarInit • Logical Condition
  102          | VarInit •

    '&'  shift, and go to state 76
    '|'  shift, and go to state 77

    $default  reduce using rule 102 (Condition)

    Logical  go to state 78


State 43

   95 F: '(' Condition • ')'

    ')'  shift, and go to state 79


State 44

   99 F: '!' CHARACTER •

    $default  reduce using rule 99 (F)


State 45

   96 F: '!' ID •

    $default  reduce using rule 96 (F)


State 46

   97 F: '!' INTEGER •

    $default  reduce using rule 97 (F)


State 47

   98 F: '!' NUM •

    $default  reduce using rule 98 (F)


State 48

  100 F: '!' '(' • Condition ')'

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    VarInit    go to state 42
    IncDec     go to state 29
    Expr       go to state 30
    E          go to state 31
    T          go to state 32
    F          go to state 33
    Condition  go to state 80


State 49

    0 $accept: Start $end •

    $default  accept


State 50

   20 TypeList: Type TypeSpecifier •

    $default  reduce using rule 20 (TypeList)


State 51

   21 TypeList: TypeSpecifier Type •

    $default  reduce using rule 21 (TypeList)


State 52

   23 Main: TypeList MAIN • '(' MainArg1 ')' '{' Body '}'

    '('  shift, and go to state 81


State 53

   70 VarList: ID • ',' VarList
   71        | ID • '=' VarInit ',' VarList
   72        | ID •
   73        | ID • '=' VarInit
  112 ArrayList: ID • ArrayDim ',' ArrayList
  113          | ID • ArrayDim
  114          | ID • ArrayDim '=' '{' ArrayInit '}' ',' ArrayList
  115          | ID • ArrayDim '=' '{' ArrayInit '}'
  116          | ID • ArrayDim '=' STRLITERAL

    ','  shift, and go to state 82
    '['  shift, and go to state 83
    '='  shift, and go to state 84

    $default  reduce using rule 72 (VarList)

    ArrayDim  go to state 85


State 54

   69 VarDeclr: TypeList VarList •

    $default  reduce using rule 69 (VarDeclr)


State 55

  111 ArrayDeclr: TypeList ArrayList •

    $default  reduce using rule 111 (ArrayDeclr)


State 56

    3 Prog: Main Prog •

    $default  reduce using rule 3 (Prog)


State 57

    5 Prog: VarDeclr ';' • Prog

    error      shift, and go to state 1
    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    INCLUDE    shift, and go to state 12
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $end  reduce using rule 8 (Prog)

    Prog           go to state 86
    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 25
    Main           go to state 26
    VarDeclr       go to state 27
    VarInit        go to state 28
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 34


State 58

    6 Prog: VarInit ';' • Prog

    error      shift, and go to state 1
    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    INCLUDE    shift, and go to state 12
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $end  reduce using rule 8 (Prog)

    Prog           go to state 87
    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 25
    Main           go to state 26
    VarDeclr       go to state 27
    VarInit        go to state 28
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 34


State 59

   93 F: ID •

    $default  reduce using rule 93 (F)


State 60

   77 VarInit: IncDec Expr •
   83 Expr: Expr • Relop E

    LESSER     shift, and go to state 61
    LESSEREQ   shift, and go to state 62
    GREATER    shift, and go to state 63
    GREATEREQ  shift, and go to state 64
    EQCOMP     shift, and go to state 65
    NOTEQ      shift, and go to state 66

    $default  reduce using rule 77 (VarInit)

    Relop  go to state 67


State 61

  105 Relop: LESSER •

    $default  reduce using rule 105 (Relop)


State 62

  106 Relop: LESSEREQ •

    $default  reduce using rule 106 (Relop)


State 63

  107 Relop: GREATER •

    $default  reduce using rule 107 (Relop)


State 64

  108 Relop: GREATEREQ •

    $default  reduce using rule 108 (Relop)


State 65

  109 Relop: EQCOMP •

    $default  reduce using rule 109 (Relop)


State 66

  110 Relop: NOTEQ •

    $default  reduce using rule 110 (Relop)


State 67

   83 Expr: Expr Relop • E

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 59
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    E  go to state 88
    T  go to state 32
    F  go to state 33


State 68

   85 E: E '+' • T

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 59
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    T  go to state 89
    F  go to state 33


State 69

   86 E: E '-' • T

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 59
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    T  go to state 90
    F  go to state 33


State 70

   88 T: T '*' • F

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 59
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    F  go to state 91


State 71

   89 T: T '/' • F

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 59
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    F  go to state 92


State 72

    7 Prog: ArrayDeclr ';' • Prog

    error      shift, and go to state 1
    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    INCLUDE    shift, and go to state 12
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $end  reduce using rule 8 (Prog)

    Prog           go to state 93
    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 25
    Main           go to state 26
    VarDeclr       go to state 27
    VarInit        go to state 28
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 34


State 73

    2 Prog: INCLUDE HEADER Prog •

    $default  reduce using rule 2 (Prog)


State 74

   78 VarInit: ID '=' STRLITERAL •

    $default  reduce using rule 78 (VarInit)


State 75

   75 VarInit: ID '=' Expr •
   83 Expr: Expr • Relop E

    LESSER     shift, and go to state 61
    LESSEREQ   shift, and go to state 62
    GREATER    shift, and go to state 63
    GREATEREQ  shift, and go to state 64
    EQCOMP     shift, and go to state 65
    NOTEQ      shift, and go to state 66

    $default  reduce using rule 75 (VarInit)

    Relop  go to state 67


State 76

  103 Logical: '&' • '&'

    '&'  shift, and go to state 94


State 77

  104 Logical: '|' • '|'

    '|'  shift, and go to state 95


State 78

  101 Condition: VarInit Logical • Condition

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    VarInit    go to state 42
    IncDec     go to state 29
    Expr       go to state 30
    E          go to state 31
    T          go to state 32
    F          go to state 33
    Condition  go to state 96


State 79

   95 F: '(' Condition ')' •

    $default  reduce using rule 95 (F)


State 80

  100 F: '!' '(' Condition • ')'

    ')'  shift, and go to state 97


State 81

   23 Main: TypeList MAIN '(' • MainArg1 ')' '{' Body '}'

    INT  shift, and go to state 98

    $default  reduce using rule 26 (MainArg1)

    MainArg1  go to state 99


State 82

   70 VarList: ID ',' • VarList

    ID  shift, and go to state 100

    VarList  go to state 101


State 83

  117 ArrayDim: '[' • INTEGER ']' ArrayDim
  118         | '[' • INTEGER ']'
  119         | '[' • ID ']' ArrayDim
  120         | '[' • ID ']'
  121         | '[' • ']' ArrayDim
  122         | '[' • ']'

    ID       shift, and go to state 102
    INTEGER  shift, and go to state 103
    ']'      shift, and go to state 104


State 84

   71 VarList: ID '=' • VarInit ',' VarList
   73        | ID '=' • VarInit

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    VarInit  go to state 105
    IncDec   go to state 29
    Expr     go to state 30
    E        go to state 31
    T        go to state 32
    F        go to state 33


State 85

  112 ArrayList: ID ArrayDim • ',' ArrayList
  113          | ID ArrayDim •
  114          | ID ArrayDim • '=' '{' ArrayInit '}' ',' ArrayList
  115          | ID ArrayDim • '=' '{' ArrayInit '}'
  116          | ID ArrayDim • '=' STRLITERAL

    ','  shift, and go to state 106
    '='  shift, and go to state 107

    $default  reduce using rule 113 (ArrayList)


State 86

    5 Prog: VarDeclr ';' Prog •

    $default  reduce using rule 5 (Prog)


State 87

    6 Prog: VarInit ';' Prog •

    $default  reduce using rule 6 (Prog)


State 88

   83 Expr: Expr Relop E •
   85 E: E • '+' T
   86  | E • '-' T

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 83 (Expr)


State 89

   85 E: E '+' T •
   88 T: T • '*' F
   89  | T • '/' F

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71

    $default  reduce using rule 85 (E)


State 90

   86 E: E '-' T •
   88 T: T • '*' F
   89  | T • '/' F

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71

    $default  reduce using rule 86 (E)


State 91

   88 T: T '*' F •

    $default  reduce using rule 88 (T)


State 92

   89 T: T '/' F •

    $default  reduce using rule 89 (T)


State 93

    7 Prog: ArrayDeclr ';' Prog •

    $default  reduce using rule 7 (Prog)


State 94

  103 Logical: '&' '&' •

    $default  reduce using rule 103 (Logical)


State 95

  104 Logical: '|' '|' •

    $default  reduce using rule 104 (Logical)


State 96

  101 Condition: VarInit Logical Condition •

    $default  reduce using rule 101 (Condition)


State 97

  100 F: '!' '(' Condition ')' •

    $default  reduce using rule 100 (F)


State 98

   24 MainArg1: INT • ID ',' MainArg2
   25         | INT • ID

    ID  shift, and go to state 108


State 99

   23 Main: TypeList MAIN '(' MainArg1 • ')' '{' Body '}'

    ')'  shift, and go to state 109


State 100

   70 VarList: ID • ',' VarList
   71        | ID • '=' VarInit ',' VarList
   72        | ID •
   73        | ID • '=' VarInit

    ','  shift, and go to state 82
    '='  shift, and go to state 84

    $default  reduce using rule 72 (VarList)


State 101

   70 VarList: ID ',' VarList •

    $default  reduce using rule 70 (VarList)


State 102

  119 ArrayDim: '[' ID • ']' ArrayDim
  120         | '[' ID • ']'

    ']'  shift, and go to state 110


State 103

  117 ArrayDim: '[' INTEGER • ']' ArrayDim
  118         | '[' INTEGER • ']'

    ']'  shift, and go to state 111


State 104

  121 ArrayDim: '[' ']' • ArrayDim
  122         | '[' ']' •

    '['  shift, and go to state 83

    $default  reduce using rule 122 (ArrayDim)

    ArrayDim  go to state 112


State 105

   71 VarList: ID '=' VarInit • ',' VarList
   73        | ID '=' VarInit •

    ','  shift, and go to state 113

    $default  reduce using rule 73 (VarList)


State 106

  112 ArrayList: ID ArrayDim ',' • ArrayList

    ID  shift, and go to state 114

    ArrayList  go to state 115


State 107

  114 ArrayList: ID ArrayDim '=' • '{' ArrayInit '}' ',' ArrayList
  115          | ID ArrayDim '=' • '{' ArrayInit '}'
  116          | ID ArrayDim '=' • STRLITERAL

    STRLITERAL  shift, and go to state 116
    '{'         shift, and go to state 117


State 108

   24 MainArg1: INT ID • ',' MainArg2
   25         | INT ID •

    ','  shift, and go to state 118

    $default  reduce using rule 25 (MainArg1)


State 109

   23 Main: TypeList MAIN '(' MainArg1 ')' • '{' Body '}'

    '{'  shift, and go to state 119


State 110

  119 ArrayDim: '[' ID ']' • ArrayDim
  120         | '[' ID ']' •

    '['  shift, and go to state 83

    $default  reduce using rule 120 (ArrayDim)

    ArrayDim  go to state 120


State 111

  117 ArrayDim: '[' INTEGER ']' • ArrayDim
  118         | '[' INTEGER ']' •

    '['  shift, and go to state 83

    $default  reduce using rule 118 (ArrayDim)

    ArrayDim  go to state 121


State 112

  121 ArrayDim: '[' ']' ArrayDim •

    $default  reduce using rule 121 (ArrayDim)


State 113

   71 VarList: ID '=' VarInit ',' • VarList

    ID  shift, and go to state 100

    VarList  go to state 122


State 114

  112 ArrayList: ID • ArrayDim ',' ArrayList
  113          | ID • ArrayDim
  114          | ID • ArrayDim '=' '{' ArrayInit '}' ',' ArrayList
  115          | ID • ArrayDim '=' '{' ArrayInit '}'
  116          | ID • ArrayDim '=' STRLITERAL

    '['  shift, and go to state 83

    ArrayDim  go to state 85


State 115

  112 ArrayList: ID ArrayDim ',' ArrayList •

    $default  reduce using rule 112 (ArrayList)


State 116

  116 ArrayList: ID ArrayDim '=' STRLITERAL •

    $default  reduce using rule 116 (ArrayList)


State 117

  114 ArrayList: ID ArrayDim '=' '{' • ArrayInit '}' ',' ArrayList
  115          | ID ArrayDim '=' '{' • ArrayInit '}'

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 59
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 125 (ArrayInit)

    Expr       go to state 123
    E          go to state 31
    T          go to state 32
    F          go to state 33
    ArrayInit  go to state 124


State 118

   24 MainArg1: INT ID ',' • MainArg2

    CHAR  shift, and go to state 125

    $default  reduce using rule 31 (MainArg2)

    MainArg2  go to state 126


State 119

   23 Main: TypeList MAIN '(' MainArg1 ')' '{' • Body '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    IF         shift, and go to state 129
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 68 (Body)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    Body           go to state 132
    VarDeclr       go to state 133
    VarInit        go to state 134
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 135
    IfCond         go to state 136
    WhileLoop      go to state 137
    ForLoop        go to state 138
    SwitchCond     go to state 139


State 120

  119 ArrayDim: '[' ID ']' ArrayDim •

    $default  reduce using rule 119 (ArrayDim)


State 121

  117 ArrayDim: '[' INTEGER ']' ArrayDim •

    $default  reduce using rule 117 (ArrayDim)


State 122

   71 VarList: ID '=' VarInit ',' VarList •

    $default  reduce using rule 71 (VarList)


State 123

   83 Expr: Expr • Relop E
  123 ArrayInit: Expr • ',' ArrayInit
  124          | Expr •

    LESSER     shift, and go to state 61
    LESSEREQ   shift, and go to state 62
    GREATER    shift, and go to state 63
    GREATEREQ  shift, and go to state 64
    EQCOMP     shift, and go to state 65
    NOTEQ      shift, and go to state 66
    ','        shift, and go to state 140

    $default  reduce using rule 124 (ArrayInit)

    Relop  go to state 67


State 124

  114 ArrayList: ID ArrayDim '=' '{' ArrayInit • '}' ',' ArrayList
  115          | ID ArrayDim '=' '{' ArrayInit • '}'

    '}'  shift, and go to state 141


State 125

   27 MainArg2: CHAR • '*' '*' ID ',' MainArg3
   28         | CHAR • '*' ID '[' ']' ',' MainArg3
   29         | CHAR • '*' ID '[' ']'
   30         | CHAR • '*' '*' ID

    '*'  shift, and go to state 142


State 126

   24 MainArg1: INT ID ',' MainArg2 •

    $default  reduce using rule 24 (MainArg1)


State 127

  138 WhileLoop: WHILE • '(' Condition ')' LoopStmt
  139          | WHILE • '(' Condition ')' '{' LoopBody '}'

    '('  shift, and go to state 143


State 128

  140 ForLoop: FOR • '(' ForInit ';' ForCond ';' ForCond ')' LoopStmt
  141        | FOR • '(' ForInit ';' ForCond ';' ForCond ')' '{' LoopBody '}'

    '('  shift, and go to state 144


State 129

  126 IfCond: IF • '(' Condition ')' SnglStmt ElseCond
  127       | IF • '(' Condition ')' '{' Body '}' ElseCond
  128       | IF • '(' Condition ')' SnglStmt
  129       | IF • '(' Condition ')' '{' Body '}'

    '('  shift, and go to state 145


State 130

  146 SwitchCond: SWITCH • '(' VarInit ')' '{' CaseList '}'
  147           | SWITCH • '(' VarInit ')' CASE INTEGER ':' LoopStmt
  148           | SWITCH • '(' VarInit ')' DEFAULT ':' LoopStmt

    '('  shift, and go to state 146


State 131

   69 VarDeclr: TypeList • VarList
  111 ArrayDeclr: TypeList • ArrayList

    ID  shift, and go to state 53

    VarList    go to state 54
    ArrayList  go to state 55


State 132

   23 Main: TypeList MAIN '(' MainArg1 ')' '{' Body • '}'

    '}'  shift, and go to state 147


State 133

   61 Body: VarDeclr • ';' Body

    ';'  shift, and go to state 148


State 134

   62 Body: VarInit • ';' Body

    ';'  shift, and go to state 149


State 135

   63 Body: ArrayDeclr • ';' Body

    ';'  shift, and go to state 150


State 136

   64 Body: IfCond • Body

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    IF         shift, and go to state 129
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 68 (Body)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    Body           go to state 151
    VarDeclr       go to state 133
    VarInit        go to state 134
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 135
    IfCond         go to state 136
    WhileLoop      go to state 137
    ForLoop        go to state 138
    SwitchCond     go to state 139


State 137

   65 Body: WhileLoop • Body

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    IF         shift, and go to state 129
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 68 (Body)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    Body           go to state 152
    VarDeclr       go to state 133
    VarInit        go to state 134
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 135
    IfCond         go to state 136
    WhileLoop      go to state 137
    ForLoop        go to state 138
    SwitchCond     go to state 139


State 138

   66 Body: ForLoop • Body

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    IF         shift, and go to state 129
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 68 (Body)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    Body           go to state 153
    VarDeclr       go to state 133
    VarInit        go to state 134
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 135
    IfCond         go to state 136
    WhileLoop      go to state 137
    ForLoop        go to state 138
    SwitchCond     go to state 139


State 139

   67 Body: SwitchCond • Body

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    IF         shift, and go to state 129
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 68 (Body)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    Body           go to state 154
    VarDeclr       go to state 133
    VarInit        go to state 134
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 135
    IfCond         go to state 136
    WhileLoop      go to state 137
    ForLoop        go to state 138
    SwitchCond     go to state 139


State 140

  123 ArrayInit: Expr ',' • ArrayInit

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 59
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 125 (ArrayInit)

    Expr       go to state 123
    E          go to state 31
    T          go to state 32
    F          go to state 33
    ArrayInit  go to state 155


State 141

  114 ArrayList: ID ArrayDim '=' '{' ArrayInit '}' • ',' ArrayList
  115          | ID ArrayDim '=' '{' ArrayInit '}' •

    ','  shift, and go to state 156

    $default  reduce using rule 115 (ArrayList)


State 142

   27 MainArg2: CHAR '*' • '*' ID ',' MainArg3
   28         | CHAR '*' • ID '[' ']' ',' MainArg3
   29         | CHAR '*' • ID '[' ']'
   30         | CHAR '*' • '*' ID

    ID   shift, and go to state 157
    '*'  shift, and go to state 158


State 143

  138 WhileLoop: WHILE '(' • Condition ')' LoopStmt
  139          | WHILE '(' • Condition ')' '{' LoopBody '}'

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    VarInit    go to state 42
    IncDec     go to state 29
    Expr       go to state 30
    E          go to state 31
    T          go to state 32
    F          go to state 33
    Condition  go to state 159


State 144

  140 ForLoop: FOR '(' • ForInit ';' ForCond ';' ForCond ')' LoopStmt
  141        | FOR '(' • ForInit ';' ForCond ';' ForCond ')' '{' LoopBody '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 145 (ForCond)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 160
    VarDeclr       go to state 161
    VarInit        go to state 42
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    Condition      go to state 162
    ForInit        go to state 163
    ForCond        go to state 164


State 145

  126 IfCond: IF '(' • Condition ')' SnglStmt ElseCond
  127       | IF '(' • Condition ')' '{' Body '}' ElseCond
  128       | IF '(' • Condition ')' SnglStmt
  129       | IF '(' • Condition ')' '{' Body '}'

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    VarInit    go to state 42
    IncDec     go to state 29
    Expr       go to state 30
    E          go to state 31
    T          go to state 32
    F          go to state 33
    Condition  go to state 165


State 146

  146 SwitchCond: SWITCH '(' • VarInit ')' '{' CaseList '}'
  147           | SWITCH '(' • VarInit ')' CASE INTEGER ':' LoopStmt
  148           | SWITCH '(' • VarInit ')' DEFAULT ':' LoopStmt

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    VarInit  go to state 166
    IncDec   go to state 29
    Expr     go to state 30
    E        go to state 31
    T        go to state 32
    F        go to state 33


State 147

   23 Main: TypeList MAIN '(' MainArg1 ')' '{' Body '}' •

    $default  reduce using rule 23 (Main)


State 148

   61 Body: VarDeclr ';' • Body

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    IF         shift, and go to state 129
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 68 (Body)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    Body           go to state 167
    VarDeclr       go to state 133
    VarInit        go to state 134
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 135
    IfCond         go to state 136
    WhileLoop      go to state 137
    ForLoop        go to state 138
    SwitchCond     go to state 139


State 149

   62 Body: VarInit ';' • Body

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    IF         shift, and go to state 129
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 68 (Body)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    Body           go to state 168
    VarDeclr       go to state 133
    VarInit        go to state 134
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 135
    IfCond         go to state 136
    WhileLoop      go to state 137
    ForLoop        go to state 138
    SwitchCond     go to state 139


State 150

   63 Body: ArrayDeclr ';' • Body

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    IF         shift, and go to state 129
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 68 (Body)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    Body           go to state 169
    VarDeclr       go to state 133
    VarInit        go to state 134
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 135
    IfCond         go to state 136
    WhileLoop      go to state 137
    ForLoop        go to state 138
    SwitchCond     go to state 139


State 151

   64 Body: IfCond Body •

    $default  reduce using rule 64 (Body)


State 152

   65 Body: WhileLoop Body •

    $default  reduce using rule 65 (Body)


State 153

   66 Body: ForLoop Body •

    $default  reduce using rule 66 (Body)


State 154

   67 Body: SwitchCond Body •

    $default  reduce using rule 67 (Body)


State 155

  123 ArrayInit: Expr ',' ArrayInit •

    $default  reduce using rule 123 (ArrayInit)


State 156

  114 ArrayList: ID ArrayDim '=' '{' ArrayInit '}' ',' • ArrayList

    ID  shift, and go to state 114

    ArrayList  go to state 170


State 157

   28 MainArg2: CHAR '*' ID • '[' ']' ',' MainArg3
   29         | CHAR '*' ID • '[' ']'

    '['  shift, and go to state 171


State 158

   27 MainArg2: CHAR '*' '*' • ID ',' MainArg3
   30         | CHAR '*' '*' • ID

    ID  shift, and go to state 172


State 159

  138 WhileLoop: WHILE '(' Condition • ')' LoopStmt
  139          | WHILE '(' Condition • ')' '{' LoopBody '}'

    ')'  shift, and go to state 173


State 160

   69 VarDeclr: TypeList • VarList

    ID  shift, and go to state 100

    VarList  go to state 54


State 161

  142 ForInit: VarDeclr •

    $default  reduce using rule 142 (ForInit)


State 162

  144 ForCond: Condition •

    $default  reduce using rule 144 (ForCond)


State 163

  140 ForLoop: FOR '(' ForInit • ';' ForCond ';' ForCond ')' LoopStmt
  141        | FOR '(' ForInit • ';' ForCond ';' ForCond ')' '{' LoopBody '}'

    ';'  shift, and go to state 174


State 164

  143 ForInit: ForCond •

    $default  reduce using rule 143 (ForInit)


State 165

  126 IfCond: IF '(' Condition • ')' SnglStmt ElseCond
  127       | IF '(' Condition • ')' '{' Body '}' ElseCond
  128       | IF '(' Condition • ')' SnglStmt
  129       | IF '(' Condition • ')' '{' Body '}'

    ')'  shift, and go to state 175


State 166

  146 SwitchCond: SWITCH '(' VarInit • ')' '{' CaseList '}'
  147           | SWITCH '(' VarInit • ')' CASE INTEGER ':' LoopStmt
  148           | SWITCH '(' VarInit • ')' DEFAULT ':' LoopStmt

    ')'  shift, and go to state 176


State 167

   61 Body: VarDeclr ';' Body •

    $default  reduce using rule 61 (Body)


State 168

   62 Body: VarInit ';' Body •

    $default  reduce using rule 62 (Body)


State 169

   63 Body: ArrayDeclr ';' Body •

    $default  reduce using rule 63 (Body)


State 170

  114 ArrayList: ID ArrayDim '=' '{' ArrayInit '}' ',' ArrayList •

    $default  reduce using rule 114 (ArrayList)


State 171

   28 MainArg2: CHAR '*' ID '[' • ']' ',' MainArg3
   29         | CHAR '*' ID '[' • ']'

    ']'  shift, and go to state 177


State 172

   27 MainArg2: CHAR '*' '*' ID • ',' MainArg3
   30         | CHAR '*' '*' ID •

    ','  shift, and go to state 178

    $default  reduce using rule 30 (MainArg2)


State 173

  138 WhileLoop: WHILE '(' Condition ')' • LoopStmt
  139          | WHILE '(' Condition ')' • '{' LoopBody '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 179
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    ';'        shift, and go to state 181
    '('        shift, and go to state 19
    '{'        shift, and go to state 182
    '!'        shift, and go to state 20

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopStmt       go to state 183
    VarDeclr       go to state 184
    VarInit        go to state 185
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 186
    LoopIfCond     go to state 187
    WhileLoop      go to state 188
    ForLoop        go to state 189
    SwitchCond     go to state 190


State 174

  140 ForLoop: FOR '(' ForInit ';' • ForCond ';' ForCond ')' LoopStmt
  141        | FOR '(' ForInit ';' • ForCond ';' ForCond ')' '{' LoopBody '}'

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 145 (ForCond)

    VarInit    go to state 42
    IncDec     go to state 29
    Expr       go to state 30
    E          go to state 31
    T          go to state 32
    F          go to state 33
    Condition  go to state 162
    ForCond    go to state 191


State 175

  126 IfCond: IF '(' Condition ')' • SnglStmt ElseCond
  127       | IF '(' Condition ')' • '{' Body '}' ElseCond
  128       | IF '(' Condition ')' • SnglStmt
  129       | IF '(' Condition ')' • '{' Body '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    IF         shift, and go to state 129
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    ';'        shift, and go to state 192
    '('        shift, and go to state 19
    '{'        shift, and go to state 193
    '!'        shift, and go to state 20

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    SnglStmt       go to state 194
    VarDeclr       go to state 195
    VarInit        go to state 196
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 197
    IfCond         go to state 198
    WhileLoop      go to state 199
    ForLoop        go to state 200
    SwitchCond     go to state 201


State 176

  146 SwitchCond: SWITCH '(' VarInit ')' • '{' CaseList '}'
  147           | SWITCH '(' VarInit ')' • CASE INTEGER ':' LoopStmt
  148           | SWITCH '(' VarInit ')' • DEFAULT ':' LoopStmt

    DEFAULT  shift, and go to state 202
    CASE     shift, and go to state 203
    '{'      shift, and go to state 204


State 177

   28 MainArg2: CHAR '*' ID '[' ']' • ',' MainArg3
   29         | CHAR '*' ID '[' ']' •

    ','  shift, and go to state 205

    $default  reduce using rule 29 (MainArg2)


State 178

   27 MainArg2: CHAR '*' '*' ID ',' • MainArg3

    CHAR  shift, and go to state 206

    $default  reduce using rule 34 (MainArg3)

    MainArg3  go to state 207


State 179

   35 LoopStmt: BREAK • ';'

    ';'  shift, and go to state 208


State 180

  130 LoopIfCond: IF • '(' Condition ')' LoopStmt LoopElseCond
  131           | IF • '(' Condition ')' '{' LoopBody '}' LoopElseCond
  132           | IF • '(' Condition ')' LoopStmt
  133           | IF • '(' Condition ')' '{' LoopBody '}'

    '('  shift, and go to state 209


State 181

   43 LoopStmt: ';' •

    $default  reduce using rule 43 (LoopStmt)


State 182

  139 WhileLoop: WHILE '(' Condition ')' '{' • LoopBody '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 210
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 60 (LoopBody)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopBody       go to state 211
    VarDeclr       go to state 212
    VarInit        go to state 213
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 214
    LoopIfCond     go to state 215
    WhileLoop      go to state 216
    ForLoop        go to state 217
    SwitchCond     go to state 218


State 183

  138 WhileLoop: WHILE '(' Condition ')' LoopStmt •

    $default  reduce using rule 138 (WhileLoop)


State 184

   36 LoopStmt: VarDeclr • ';'

    ';'  shift, and go to state 219


State 185

   37 LoopStmt: VarInit • ';'

    ';'  shift, and go to state 220


State 186

   38 LoopStmt: ArrayDeclr • ';'

    ';'  shift, and go to state 221


State 187

   39 LoopStmt: LoopIfCond •

    $default  reduce using rule 39 (LoopStmt)


State 188

   40 LoopStmt: WhileLoop •

    $default  reduce using rule 40 (LoopStmt)


State 189

   41 LoopStmt: ForLoop •

    $default  reduce using rule 41 (LoopStmt)


State 190

   42 LoopStmt: SwitchCond •

    $default  reduce using rule 42 (LoopStmt)


State 191

  140 ForLoop: FOR '(' ForInit ';' ForCond • ';' ForCond ')' LoopStmt
  141        | FOR '(' ForInit ';' ForCond • ';' ForCond ')' '{' LoopBody '}'

    ';'  shift, and go to state 222


State 192

   51 SnglStmt: ';' •

    $default  reduce using rule 51 (SnglStmt)


State 193

  127 IfCond: IF '(' Condition ')' '{' • Body '}' ElseCond
  129       | IF '(' Condition ')' '{' • Body '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    IF         shift, and go to state 129
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 68 (Body)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    Body           go to state 223
    VarDeclr       go to state 133
    VarInit        go to state 134
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 135
    IfCond         go to state 136
    WhileLoop      go to state 137
    ForLoop        go to state 138
    SwitchCond     go to state 139


State 194

  126 IfCond: IF '(' Condition ')' SnglStmt • ElseCond
  128       | IF '(' Condition ')' SnglStmt •

    ELSE  shift, and go to state 224

    ELSE      [reduce using rule 128 (IfCond)]
    $default  reduce using rule 128 (IfCond)

    ElseCond  go to state 225

    shift/reduce conflict on token ELSE:
      128 IfCond: IF '(' Condition ')' SnglStmt •
      134 ElseCond: • ELSE SnglStmt
      Example: IF '(' Condition ')' IF '(' Condition ')' SnglStmt • ELSE SnglStmt
      Shift derivation
        IfCond
        ↳ 128: IF '(' Condition ')' SnglStmt
                                    ↳ 47: IfCond
                                          ↳ 126: IF '(' Condition ')' SnglStmt ElseCond
                                                                               ↳ 134: • ELSE SnglStmt
      Reduce derivation
        IfCond
        ↳ 126: IF '(' Condition ')' SnglStmt                                     ElseCond
                                    ↳ 47: IfCond                                 ↳ 134: ELSE SnglStmt
                                          ↳ 128: IF '(' Condition ')' SnglStmt •

    shift/reduce conflict on token ELSE:
      128 IfCond: IF '(' Condition ')' SnglStmt •
      135 ElseCond: • ELSE '{' Body '}'
      Example: IF '(' Condition ')' IF '(' Condition ')' SnglStmt • ELSE '{' '}'
      Shift derivation
        IfCond
        ↳ 128: IF '(' Condition ')' SnglStmt
                                    ↳ 47: IfCond
                                          ↳ 126: IF '(' Condition ')' SnglStmt ElseCond
                                                                               ↳ 135: • ELSE '{' Body     '}'
                                                                                                 ↳ 135: ε
      Reduce derivation
        IfCond
        ↳ 126: IF '(' Condition ')' SnglStmt                                     ElseCond
                                    ↳ 47: IfCond                                 ↳ 135: ELSE '{' Body     '}'
                                          ↳ 128: IF '(' Condition ')' SnglStmt •                 ↳ 135: ε



State 195

   44 SnglStmt: VarDeclr • ';'

    ';'  shift, and go to state 226


State 196

   45 SnglStmt: VarInit • ';'

    ';'  shift, and go to state 227


State 197

   46 SnglStmt: ArrayDeclr • ';'

    ';'  shift, and go to state 228


State 198

   47 SnglStmt: IfCond •

    $default  reduce using rule 47 (SnglStmt)


State 199

   48 SnglStmt: WhileLoop •

    $default  reduce using rule 48 (SnglStmt)


State 200

   49 SnglStmt: ForLoop •

    $default  reduce using rule 49 (SnglStmt)


State 201

   50 SnglStmt: SwitchCond •

    $default  reduce using rule 50 (SnglStmt)


State 202

  148 SwitchCond: SWITCH '(' VarInit ')' DEFAULT • ':' LoopStmt

    ':'  shift, and go to state 229


State 203

  147 SwitchCond: SWITCH '(' VarInit ')' CASE • INTEGER ':' LoopStmt

    INTEGER  shift, and go to state 230


State 204

  146 SwitchCond: SWITCH '(' VarInit ')' '{' • CaseList '}'

    DEFAULT  shift, and go to state 231
    CASE     shift, and go to state 232

    CaseList  go to state 233
    Case      go to state 234


State 205

   28 MainArg2: CHAR '*' ID '[' ']' ',' • MainArg3

    CHAR  shift, and go to state 206

    $default  reduce using rule 34 (MainArg3)

    MainArg3  go to state 235


State 206

   32 MainArg3: CHAR • '*' '*' ID
   33         | CHAR • '*' ID '[' ']'

    '*'  shift, and go to state 236


State 207

   27 MainArg2: CHAR '*' '*' ID ',' MainArg3 •

    $default  reduce using rule 27 (MainArg2)


State 208

   35 LoopStmt: BREAK ';' •

    $default  reduce using rule 35 (LoopStmt)


State 209

  130 LoopIfCond: IF '(' • Condition ')' LoopStmt LoopElseCond
  131           | IF '(' • Condition ')' '{' LoopBody '}' LoopElseCond
  132           | IF '(' • Condition ')' LoopStmt
  133           | IF '(' • Condition ')' '{' LoopBody '}'

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    VarInit    go to state 42
    IncDec     go to state 29
    Expr       go to state 30
    E          go to state 31
    T          go to state 32
    F          go to state 33
    Condition  go to state 237


State 210

   52 LoopBody: BREAK • ';' LoopBody

    ';'  shift, and go to state 238


State 211

  139 WhileLoop: WHILE '(' Condition ')' '{' LoopBody • '}'

    '}'  shift, and go to state 239


State 212

   53 LoopBody: VarDeclr • ';' LoopBody

    ';'  shift, and go to state 240


State 213

   54 LoopBody: VarInit • ';' LoopBody

    ';'  shift, and go to state 241


State 214

   55 LoopBody: ArrayDeclr • ';' LoopBody

    ';'  shift, and go to state 242


State 215

   56 LoopBody: LoopIfCond • LoopBody

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 210
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 60 (LoopBody)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopBody       go to state 243
    VarDeclr       go to state 212
    VarInit        go to state 213
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 214
    LoopIfCond     go to state 215
    WhileLoop      go to state 216
    ForLoop        go to state 217
    SwitchCond     go to state 218


State 216

   57 LoopBody: WhileLoop • LoopBody

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 210
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 60 (LoopBody)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopBody       go to state 244
    VarDeclr       go to state 212
    VarInit        go to state 213
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 214
    LoopIfCond     go to state 215
    WhileLoop      go to state 216
    ForLoop        go to state 217
    SwitchCond     go to state 218


State 217

   58 LoopBody: ForLoop • LoopBody

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 210
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 60 (LoopBody)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopBody       go to state 245
    VarDeclr       go to state 212
    VarInit        go to state 213
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 214
    LoopIfCond     go to state 215
    WhileLoop      go to state 216
    ForLoop        go to state 217
    SwitchCond     go to state 218


State 218

   59 LoopBody: SwitchCond • LoopBody

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 210
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 60 (LoopBody)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopBody       go to state 246
    VarDeclr       go to state 212
    VarInit        go to state 213
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 214
    LoopIfCond     go to state 215
    WhileLoop      go to state 216
    ForLoop        go to state 217
    SwitchCond     go to state 218


State 219

   36 LoopStmt: VarDeclr ';' •

    $default  reduce using rule 36 (LoopStmt)


State 220

   37 LoopStmt: VarInit ';' •

    $default  reduce using rule 37 (LoopStmt)


State 221

   38 LoopStmt: ArrayDeclr ';' •

    $default  reduce using rule 38 (LoopStmt)


State 222

  140 ForLoop: FOR '(' ForInit ';' ForCond ';' • ForCond ')' LoopStmt
  141        | FOR '(' ForInit ';' ForCond ';' • ForCond ')' '{' LoopBody '}'

    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 145 (ForCond)

    VarInit    go to state 42
    IncDec     go to state 29
    Expr       go to state 30
    E          go to state 31
    T          go to state 32
    F          go to state 33
    Condition  go to state 162
    ForCond    go to state 247


State 223

  127 IfCond: IF '(' Condition ')' '{' Body • '}' ElseCond
  129       | IF '(' Condition ')' '{' Body • '}'

    '}'  shift, and go to state 248


State 224

  134 ElseCond: ELSE • SnglStmt
  135         | ELSE • '{' Body '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    IF         shift, and go to state 129
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    ';'        shift, and go to state 192
    '('        shift, and go to state 19
    '{'        shift, and go to state 249
    '!'        shift, and go to state 20

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    SnglStmt       go to state 250
    VarDeclr       go to state 195
    VarInit        go to state 196
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 197
    IfCond         go to state 198
    WhileLoop      go to state 199
    ForLoop        go to state 200
    SwitchCond     go to state 201


State 225

  126 IfCond: IF '(' Condition ')' SnglStmt ElseCond •

    $default  reduce using rule 126 (IfCond)


State 226

   44 SnglStmt: VarDeclr ';' •

    $default  reduce using rule 44 (SnglStmt)


State 227

   45 SnglStmt: VarInit ';' •

    $default  reduce using rule 45 (SnglStmt)


State 228

   46 SnglStmt: ArrayDeclr ';' •

    $default  reduce using rule 46 (SnglStmt)


State 229

  148 SwitchCond: SWITCH '(' VarInit ')' DEFAULT ':' • LoopStmt

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 179
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    ';'        shift, and go to state 181
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopStmt       go to state 251
    VarDeclr       go to state 184
    VarInit        go to state 185
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 186
    LoopIfCond     go to state 187
    WhileLoop      go to state 188
    ForLoop        go to state 189
    SwitchCond     go to state 190


State 230

  147 SwitchCond: SWITCH '(' VarInit ')' CASE INTEGER • ':' LoopStmt

    ':'  shift, and go to state 252


State 231

  152 Case: DEFAULT • ':' LoopStmt

    ':'  shift, and go to state 253


State 232

  151 Case: CASE • INTEGER ':' LoopStmt

    INTEGER  shift, and go to state 254


State 233

  146 SwitchCond: SWITCH '(' VarInit ')' '{' CaseList • '}'

    '}'  shift, and go to state 255


State 234

  149 CaseList: Case •
  150         | Case • CaseList

    DEFAULT  shift, and go to state 231
    CASE     shift, and go to state 232

    $default  reduce using rule 149 (CaseList)

    CaseList  go to state 256
    Case      go to state 234


State 235

   28 MainArg2: CHAR '*' ID '[' ']' ',' MainArg3 •

    $default  reduce using rule 28 (MainArg2)


State 236

   32 MainArg3: CHAR '*' • '*' ID
   33         | CHAR '*' • ID '[' ']'

    ID   shift, and go to state 257
    '*'  shift, and go to state 258


State 237

  130 LoopIfCond: IF '(' Condition • ')' LoopStmt LoopElseCond
  131           | IF '(' Condition • ')' '{' LoopBody '}' LoopElseCond
  132           | IF '(' Condition • ')' LoopStmt
  133           | IF '(' Condition • ')' '{' LoopBody '}'

    ')'  shift, and go to state 259


State 238

   52 LoopBody: BREAK ';' • LoopBody

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 210
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 60 (LoopBody)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopBody       go to state 260
    VarDeclr       go to state 212
    VarInit        go to state 213
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 214
    LoopIfCond     go to state 215
    WhileLoop      go to state 216
    ForLoop        go to state 217
    SwitchCond     go to state 218


State 239

  139 WhileLoop: WHILE '(' Condition ')' '{' LoopBody '}' •

    $default  reduce using rule 139 (WhileLoop)


State 240

   53 LoopBody: VarDeclr ';' • LoopBody

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 210
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 60 (LoopBody)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopBody       go to state 261
    VarDeclr       go to state 212
    VarInit        go to state 213
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 214
    LoopIfCond     go to state 215
    WhileLoop      go to state 216
    ForLoop        go to state 217
    SwitchCond     go to state 218


State 241

   54 LoopBody: VarInit ';' • LoopBody

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 210
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 60 (LoopBody)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopBody       go to state 262
    VarDeclr       go to state 212
    VarInit        go to state 213
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 214
    LoopIfCond     go to state 215
    WhileLoop      go to state 216
    ForLoop        go to state 217
    SwitchCond     go to state 218


State 242

   55 LoopBody: ArrayDeclr ';' • LoopBody

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 210
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 60 (LoopBody)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopBody       go to state 263
    VarDeclr       go to state 212
    VarInit        go to state 213
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 214
    LoopIfCond     go to state 215
    WhileLoop      go to state 216
    ForLoop        go to state 217
    SwitchCond     go to state 218


State 243

   56 LoopBody: LoopIfCond LoopBody •

    $default  reduce using rule 56 (LoopBody)


State 244

   57 LoopBody: WhileLoop LoopBody •

    $default  reduce using rule 57 (LoopBody)


State 245

   58 LoopBody: ForLoop LoopBody •

    $default  reduce using rule 58 (LoopBody)


State 246

   59 LoopBody: SwitchCond LoopBody •

    $default  reduce using rule 59 (LoopBody)


State 247

  140 ForLoop: FOR '(' ForInit ';' ForCond ';' ForCond • ')' LoopStmt
  141        | FOR '(' ForInit ';' ForCond ';' ForCond • ')' '{' LoopBody '}'

    ')'  shift, and go to state 264


State 248

  127 IfCond: IF '(' Condition ')' '{' Body '}' • ElseCond
  129       | IF '(' Condition ')' '{' Body '}' •

    ELSE  shift, and go to state 224

    ELSE      [reduce using rule 129 (IfCond)]
    $default  reduce using rule 129 (IfCond)

    ElseCond  go to state 265

    shift/reduce conflict on token ELSE:
      129 IfCond: IF '(' Condition ')' '{' Body '}' •
      134 ElseCond: • ELSE SnglStmt
      Example: IF '(' Condition ')' IF '(' Condition ')' '{' Body '}' • ELSE SnglStmt
      Shift derivation
        IfCond
        ↳ 128: IF '(' Condition ')' SnglStmt
                                    ↳ 47: IfCond
                                          ↳ 127: IF '(' Condition ')' '{' Body '}' ElseCond
                                                                                   ↳ 134: • ELSE SnglStmt
      Reduce derivation
        IfCond
        ↳ 126: IF '(' Condition ')' SnglStmt                                         ElseCond
                                    ↳ 47: IfCond                                     ↳ 134: ELSE SnglStmt
                                          ↳ 129: IF '(' Condition ')' '{' Body '}' •

    shift/reduce conflict on token ELSE:
      129 IfCond: IF '(' Condition ')' '{' Body '}' •
      135 ElseCond: • ELSE '{' Body '}'
      Example: IF '(' Condition ')' IF '(' Condition ')' '{' Body '}' • ELSE '{' '}'
      Shift derivation
        IfCond
        ↳ 128: IF '(' Condition ')' SnglStmt
                                    ↳ 47: IfCond
                                          ↳ 127: IF '(' Condition ')' '{' Body '}' ElseCond
                                                                                   ↳ 135: • ELSE '{' Body     '}'
                                                                                                     ↳ 135: ε
      Reduce derivation
        IfCond
        ↳ 126: IF '(' Condition ')' SnglStmt                                         ElseCond
                                    ↳ 47: IfCond                                     ↳ 135: ELSE '{' Body     '}'
                                          ↳ 129: IF '(' Condition ')' '{' Body '}' •                 ↳ 135: ε



State 249

  135 ElseCond: ELSE '{' • Body '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    IF         shift, and go to state 129
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 68 (Body)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    Body           go to state 266
    VarDeclr       go to state 133
    VarInit        go to state 134
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 135
    IfCond         go to state 136
    WhileLoop      go to state 137
    ForLoop        go to state 138
    SwitchCond     go to state 139


State 250

  134 ElseCond: ELSE SnglStmt •

    $default  reduce using rule 134 (ElseCond)


State 251

  148 SwitchCond: SWITCH '(' VarInit ')' DEFAULT ':' LoopStmt •

    $default  reduce using rule 148 (SwitchCond)


State 252

  147 SwitchCond: SWITCH '(' VarInit ')' CASE INTEGER ':' • LoopStmt

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 179
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    ';'        shift, and go to state 181
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopStmt       go to state 267
    VarDeclr       go to state 184
    VarInit        go to state 185
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 186
    LoopIfCond     go to state 187
    WhileLoop      go to state 188
    ForLoop        go to state 189
    SwitchCond     go to state 190


State 253

  152 Case: DEFAULT ':' • LoopStmt

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 179
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    ';'        shift, and go to state 181
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopStmt       go to state 268
    VarDeclr       go to state 184
    VarInit        go to state 185
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 186
    LoopIfCond     go to state 187
    WhileLoop      go to state 188
    ForLoop        go to state 189
    SwitchCond     go to state 190


State 254

  151 Case: CASE INTEGER • ':' LoopStmt

    ':'  shift, and go to state 269


State 255

  146 SwitchCond: SWITCH '(' VarInit ')' '{' CaseList '}' •

    $default  reduce using rule 146 (SwitchCond)


State 256

  150 CaseList: Case CaseList •

    $default  reduce using rule 150 (CaseList)


State 257

   33 MainArg3: CHAR '*' ID • '[' ']'

    '['  shift, and go to state 270


State 258

   32 MainArg3: CHAR '*' '*' • ID

    ID  shift, and go to state 271


State 259

  130 LoopIfCond: IF '(' Condition ')' • LoopStmt LoopElseCond
  131           | IF '(' Condition ')' • '{' LoopBody '}' LoopElseCond
  132           | IF '(' Condition ')' • LoopStmt
  133           | IF '(' Condition ')' • '{' LoopBody '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 179
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    ';'        shift, and go to state 181
    '('        shift, and go to state 19
    '{'        shift, and go to state 272
    '!'        shift, and go to state 20

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopStmt       go to state 273
    VarDeclr       go to state 184
    VarInit        go to state 185
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 186
    LoopIfCond     go to state 187
    WhileLoop      go to state 188
    ForLoop        go to state 189
    SwitchCond     go to state 190


State 260

   52 LoopBody: BREAK ';' LoopBody •

    $default  reduce using rule 52 (LoopBody)


State 261

   53 LoopBody: VarDeclr ';' LoopBody •

    $default  reduce using rule 53 (LoopBody)


State 262

   54 LoopBody: VarInit ';' LoopBody •

    $default  reduce using rule 54 (LoopBody)


State 263

   55 LoopBody: ArrayDeclr ';' LoopBody •

    $default  reduce using rule 55 (LoopBody)


State 264

  140 ForLoop: FOR '(' ForInit ';' ForCond ';' ForCond ')' • LoopStmt
  141        | FOR '(' ForInit ';' ForCond ';' ForCond ')' • '{' LoopBody '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 179
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    ';'        shift, and go to state 181
    '('        shift, and go to state 19
    '{'        shift, and go to state 274
    '!'        shift, and go to state 20

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopStmt       go to state 275
    VarDeclr       go to state 184
    VarInit        go to state 185
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 186
    LoopIfCond     go to state 187
    WhileLoop      go to state 188
    ForLoop        go to state 189
    SwitchCond     go to state 190


State 265

  127 IfCond: IF '(' Condition ')' '{' Body '}' ElseCond •

    $default  reduce using rule 127 (IfCond)


State 266

  135 ElseCond: ELSE '{' Body • '}'

    '}'  shift, and go to state 276


State 267

  147 SwitchCond: SWITCH '(' VarInit ')' CASE INTEGER ':' LoopStmt •

    $default  reduce using rule 147 (SwitchCond)


State 268

  152 Case: DEFAULT ':' LoopStmt •

    $default  reduce using rule 152 (Case)


State 269

  151 Case: CASE INTEGER ':' • LoopStmt

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 179
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    ';'        shift, and go to state 181
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopStmt       go to state 277
    VarDeclr       go to state 184
    VarInit        go to state 185
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 186
    LoopIfCond     go to state 187
    WhileLoop      go to state 188
    ForLoop        go to state 189
    SwitchCond     go to state 190


State 270

   33 MainArg3: CHAR '*' ID '[' • ']'

    ']'  shift, and go to state 278


State 271

   32 MainArg3: CHAR '*' '*' ID •

    $default  reduce using rule 32 (MainArg3)


State 272

  131 LoopIfCond: IF '(' Condition ')' '{' • LoopBody '}' LoopElseCond
  133           | IF '(' Condition ')' '{' • LoopBody '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 210
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 60 (LoopBody)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopBody       go to state 279
    VarDeclr       go to state 212
    VarInit        go to state 213
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 214
    LoopIfCond     go to state 215
    WhileLoop      go to state 216
    ForLoop        go to state 217
    SwitchCond     go to state 218


State 273

  130 LoopIfCond: IF '(' Condition ')' LoopStmt • LoopElseCond
  132           | IF '(' Condition ')' LoopStmt •

    ELSE  shift, and go to state 280

    ELSE      [reduce using rule 132 (LoopIfCond)]
    $default  reduce using rule 132 (LoopIfCond)

    LoopElseCond  go to state 281

    shift/reduce conflict on token ELSE:
      132 LoopIfCond: IF '(' Condition ')' LoopStmt •
      136 LoopElseCond: • ELSE LoopStmt
      Example: IF '(' Condition ')' IF '(' Condition ')' LoopStmt • ELSE LoopStmt
      Shift derivation
        LoopIfCond
        ↳ 132: IF '(' Condition ')' LoopStmt
                                    ↳ 39: LoopIfCond
                                          ↳ 130: IF '(' Condition ')' LoopStmt LoopElseCond
                                                                               ↳ 136: • ELSE LoopStmt
      Reduce derivation
        LoopIfCond
        ↳ 130: IF '(' Condition ')' LoopStmt                                     LoopElseCond
                                    ↳ 39: LoopIfCond                             ↳ 136: ELSE LoopStmt
                                          ↳ 132: IF '(' Condition ')' LoopStmt •

    shift/reduce conflict on token ELSE:
      132 LoopIfCond: IF '(' Condition ')' LoopStmt •
      137 LoopElseCond: • ELSE '{' LoopBody '}'
      Example: IF '(' Condition ')' IF '(' Condition ')' LoopStmt • ELSE '{' '}'
      Shift derivation
        LoopIfCond
        ↳ 132: IF '(' Condition ')' LoopStmt
                                    ↳ 39: LoopIfCond
                                          ↳ 130: IF '(' Condition ')' LoopStmt LoopElseCond
                                                                               ↳ 137: • ELSE '{' LoopBody '}'
                                                                                                 ↳ 137: ε
      Reduce derivation
        LoopIfCond
        ↳ 130: IF '(' Condition ')' LoopStmt                                     LoopElseCond
                                    ↳ 39: LoopIfCond                             ↳ 137: ELSE '{' LoopBody '}'
                                          ↳ 132: IF '(' Condition ')' LoopStmt •                 ↳ 137: ε



State 274

  141 ForLoop: FOR '(' ForInit ';' ForCond ';' ForCond ')' '{' • LoopBody '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 210
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 60 (LoopBody)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopBody       go to state 282
    VarDeclr       go to state 212
    VarInit        go to state 213
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 214
    LoopIfCond     go to state 215
    WhileLoop      go to state 216
    ForLoop        go to state 217
    SwitchCond     go to state 218


State 275

  140 ForLoop: FOR '(' ForInit ';' ForCond ';' ForCond ')' LoopStmt •

    $default  reduce using rule 140 (ForLoop)


State 276

  135 ElseCond: ELSE '{' Body '}' •

    $default  reduce using rule 135 (ElseCond)


State 277

  151 Case: CASE INTEGER ':' LoopStmt •

    $default  reduce using rule 151 (Case)


State 278

   33 MainArg3: CHAR '*' ID '[' ']' •

    $default  reduce using rule 33 (MainArg3)


State 279

  131 LoopIfCond: IF '(' Condition ')' '{' LoopBody • '}' LoopElseCond
  133           | IF '(' Condition ')' '{' LoopBody • '}'

    '}'  shift, and go to state 283


State 280

  136 LoopElseCond: ELSE • LoopStmt
  137             | ELSE • '{' LoopBody '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 179
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    ';'        shift, and go to state 181
    '('        shift, and go to state 19
    '{'        shift, and go to state 284
    '!'        shift, and go to state 20

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopStmt       go to state 285
    VarDeclr       go to state 184
    VarInit        go to state 185
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 186
    LoopIfCond     go to state 187
    WhileLoop      go to state 188
    ForLoop        go to state 189
    SwitchCond     go to state 190


State 281

  130 LoopIfCond: IF '(' Condition ')' LoopStmt LoopElseCond •

    $default  reduce using rule 130 (LoopIfCond)


State 282

  141 ForLoop: FOR '(' ForInit ';' ForCond ';' ForCond ')' '{' LoopBody • '}'

    '}'  shift, and go to state 286


State 283

  131 LoopIfCond: IF '(' Condition ')' '{' LoopBody '}' • LoopElseCond
  133           | IF '(' Condition ')' '{' LoopBody '}' •

    ELSE  shift, and go to state 280

    ELSE      [reduce using rule 133 (LoopIfCond)]
    $default  reduce using rule 133 (LoopIfCond)

    LoopElseCond  go to state 287

    shift/reduce conflict on token ELSE:
      133 LoopIfCond: IF '(' Condition ')' '{' LoopBody '}' •
      136 LoopElseCond: • ELSE LoopStmt
      Example: IF '(' Condition ')' IF '(' Condition ')' '{' LoopBody '}' • ELSE LoopStmt
      Shift derivation
        LoopIfCond
        ↳ 132: IF '(' Condition ')' LoopStmt
                                    ↳ 39: LoopIfCond
                                          ↳ 131: IF '(' Condition ')' '{' LoopBody '}' LoopElseCond
                                                                                       ↳ 136: • ELSE LoopStmt
      Reduce derivation
        LoopIfCond
        ↳ 130: IF '(' Condition ')' LoopStmt                                             LoopElseCond
                                    ↳ 39: LoopIfCond                                     ↳ 136: ELSE LoopStmt
                                          ↳ 133: IF '(' Condition ')' '{' LoopBody '}' •

    shift/reduce conflict on token ELSE:
      133 LoopIfCond: IF '(' Condition ')' '{' LoopBody '}' •
      137 LoopElseCond: • ELSE '{' LoopBody '}'
      Example: IF '(' Condition ')' IF '(' Condition ')' '{' LoopBody '}' • ELSE '{' '}'
      Shift derivation
        LoopIfCond
        ↳ 132: IF '(' Condition ')' LoopStmt
                                    ↳ 39: LoopIfCond
                                          ↳ 131: IF '(' Condition ')' '{' LoopBody '}' LoopElseCond
                                                                                       ↳ 137: • ELSE '{' LoopBody '}'
                                                                                                         ↳ 137: ε
      Reduce derivation
        LoopIfCond
        ↳ 130: IF '(' Condition ')' LoopStmt                                             LoopElseCond
                                    ↳ 39: LoopIfCond                                     ↳ 137: ELSE '{' LoopBody '}'
                                          ↳ 133: IF '(' Condition ')' '{' LoopBody '}' •                 ↳ 137: ε



State 284

  137 LoopElseCond: ELSE '{' • LoopBody '}'

    VOID       shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    DOUBLE     shift, and go to state 6
    AUTO       shift, and go to state 7
    STATIC     shift, and go to state 8
    EXTERN     shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CONST      shift, and go to state 11
    WHILE      shift, and go to state 127
    FOR        shift, and go to state 128
    BREAK      shift, and go to state 210
    IF         shift, and go to state 180
    SWITCH     shift, and go to state 130
    CHARACTER  shift, and go to state 13
    ID         shift, and go to state 14
    INTEGER    shift, and go to state 15
    NUM        shift, and go to state 16
    INC        shift, and go to state 17
    DEC        shift, and go to state 18
    '('        shift, and go to state 19
    '!'        shift, and go to state 20

    $default  reduce using rule 60 (LoopBody)

    Type           go to state 23
    TypeSpecifier  go to state 24
    TypeList       go to state 131
    LoopBody       go to state 288
    VarDeclr       go to state 212
    VarInit        go to state 213
    IncDec         go to state 29
    Expr           go to state 30
    E              go to state 31
    T              go to state 32
    F              go to state 33
    ArrayDeclr     go to state 214
    LoopIfCond     go to state 215
    WhileLoop      go to state 216
    ForLoop        go to state 217
    SwitchCond     go to state 218


State 285

  136 LoopElseCond: ELSE LoopStmt •

    $default  reduce using rule 136 (LoopElseCond)


State 286

  141 ForLoop: FOR '(' ForInit ';' ForCond ';' ForCond ')' '{' LoopBody '}' •

    $default  reduce using rule 141 (ForLoop)


State 287

  131 LoopIfCond: IF '(' Condition ')' '{' LoopBody '}' LoopElseCond •

    $default  reduce using rule 131 (LoopIfCond)


State 288

  137 LoopElseCond: ELSE '{' LoopBody • '}'

    '}'  shift, and go to state 289


State 289

  137 LoopElseCond: ELSE '{' LoopBody '}' •

    $default  reduce using rule 137 (LoopElseCond)
